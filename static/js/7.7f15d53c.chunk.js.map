{"version":3,"sources":["component/userlist/userlist.js","actions/user.js","view/user/user.js"],"names":["UserList","props","itemLayout","dataSource","data","renderItem","item","id","author","title","last_reply_at","Item","key","actions","split","Meta","avatar","src","avatar_url","loginname","to","fetchUser","dispatch","type","Axios","get","then","res","status","payload","userData","catch","err","console","log","dataStyle","color","User","state","listLoading","this","score","create_at","className","style","fontSize","textAlign","md","recent_topics","recent_replies","name","match","params","React","Component","connect","user","bindActionCreators"],"mappings":"wPAkCeA,EA9BE,SAACC,GAChB,OACE,kBAAC,IAAD,CACEC,WAAW,aACXC,WAAYF,EAAMG,KAClBC,WAAY,SAACC,GAAU,IACfC,EAAqCD,EAArCC,GAAIC,EAAiCF,EAAjCE,OAAQC,EAAyBH,EAAzBG,MAAOC,EAAkBJ,EAAlBI,cACzB,OAAQ,kBAAC,IAAKC,KAAN,CACNC,IAAKL,EACLM,QAAS,CAAC,uCAAD,OAAUH,EAAcI,MAAM,KAAK,MAE5C,kBAAC,IAAKH,KAAKI,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQC,IAAKT,EAAOU,aAC5BT,MACA,6BACGD,EAAOW,UACR,4BAAI,kBAAC,IAAD,CAAMC,GAAE,kBAAab,IAAOE,Y,2CCe/BY,EAhBG,SAACF,GAAD,OAAe,SAAAG,GAC/BA,EAjBO,CACLC,KAAK,eAiBPC,IAAMC,IAAN,0CAA6CN,IAC1CO,MAAM,SAAAC,GACa,MAAfA,EAAIC,QACLN,EAhBC,CACLC,KAAK,qBACLM,QAc8B,CACxBC,SAAUH,EAAIvB,KAAKA,WAIxB2B,OAAO,SAAAC,GACNV,EAhBG,CACLC,KAAK,sBAgBHU,QAAQC,IAAIF,QCtBZG,EAAY,CAChBC,MAAO,WAEHC,E,kDACJ,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,MAAQ,CACXC,aAAa,GAHE,E,qDAMT,IAAD,EACyCC,KAAKvC,MAAM6B,SAAtDX,EADE,EACFA,UAAWD,EADT,EACSA,WAAYuB,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,UACnC,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAQA,UAAU,aAAa1B,IAAKC,IACpC,kBAAC,IAAD,CAAK0B,MAAO,CAACC,SAAS,OAAQC,UAAU,WACtC,kBAAC,IAAD,CAAKC,GAAI,GAAT,sBAAgB,0BAAMH,MAAOT,GAAYhB,IACzC,kBAAC,IAAD,CAAK4B,GAAI,GAAT,gBAAe,0BAAMH,MAAOT,GAAYM,IACxC,kBAAC,IAAD,CAAKM,GAAI,GAAT,4BAAiB,0BAAMH,MAAOT,GAAYO,EAAU5B,MAAM,KAAK,OAGnE,kBAAC,IAAD,CACES,KAAK,QACLd,MAAM,wCAEN,kBAAC,EAAD,CAAUL,KAAMoC,KAAKvC,MAAM6B,SAASkB,iBAEtC,kBAAC,IAAD,CACEzB,KAAK,QACLd,MAAM,8CAEN,kBAAC,EAAD,CAAUL,KAAMoC,KAAKvC,MAAM6B,SAASmB,qB,0CAM1C,IAAIC,EAAOV,KAAKvC,MAAMkD,MAAMC,OAAOjC,UACnCqB,KAAKvC,MAAMoB,UAAU6B,O,GApCNG,IAAMC,WA+CVC,uBARS,SAACjB,GACvB,MAAM,CACJR,SAASQ,EAAMkB,KAAKpD,SAGG,SAACkB,GAC1B,OAAOmC,YAAmB,CAAEpC,aAAWC,KAE1BiC,CAGblB","file":"static/js/7.7f15d53c.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar } from 'antd'\nimport { Link } from 'react-router-dom'\n\nconst UserList = (props) => {\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={props.data}\n      renderItem={(item) => {\n        let { id, author, title, last_reply_at } = item\n        return (<List.Item\n          key={id}\n          actions={[`最后回复时间${last_reply_at.split('T')[0]}`]}\n        >\n          <List.Item.Meta \n            avatar={<Avatar src={author.avatar_url} />}\n            title={\n            <div>\n              {author.loginname}\n              <h4><Link to={`/detail/${id}`}>{title}</Link></h4>\n            </div>\n            }\n          />\n          \n        </List.Item>)\n      }}\n\n\n    >\n    </List>\n  );\n}\n\nexport default UserList;","import Axios from 'axios'\n\nconst startUser = () =>{\n  return {\n    type:'START_USER'\n  }\n}\nconst fetchUserSuccess = (payload) =>{\n  return {\n    type:'FETCH_USER_SUCCESS',\n    payload\n  }\n}\nconst fetchUserFailed = () =>{\n  return {\n    type:'FETCH_USER_FAILED'\n  }\n}\n\nconst fetchUser = (loginname) => dispatch => {\n  dispatch(startUser())\n  Axios.get(`https://cnodejs.org/api/v1/user/${loginname}`)\n    .then( res => {\n      if(res.status === 200){\n        dispatch(fetchUserSuccess({\n          userData: res.data.data\n        }))\n      }\n    })\n    .catch( err =>{\n      dispatch(fetchUserFailed())\n      console.log(err)\n    })\n}\n\nexport default fetchUser","import React from 'react';\nimport { Avatar, Row, Col, Card} from 'antd'\nimport UserList from '../../component/userlist/userlist'\nimport './user.scss'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport fetchUser from '../../actions/user'\n\n\nconst dataStyle = {\n  color: '#448ef7'\n}\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      listLoading: true\n     }\n  }\n  render() { \n    let {loginname, avatar_url, score, create_at} = this.props.userData\n    return ( \n      <div className=\"userWrap\">\n        <div className=\"userInfo\">\n          <Avatar className=\"userAvatar\" src={avatar_url}/>\n          <Row style={{fontSize:'16px', textAlign:'center'}}>\n            <Col md={8}>用户名:<span style={dataStyle}>{loginname}</span></Col>\n            <Col md={8}>积分:<span style={dataStyle}>{score}</span></Col>\n            <Col md={8}>注册时间:<span style={dataStyle}>{create_at.split('T')[0]}</span></Col>\n          </Row>\n        </div>\n        <Card\n          type=\"inner\"\n          title=\"最近创建话题\"\n        >\n          <UserList data={this.props.userData.recent_topics}/>\n        </Card>\n        <Card\n          type=\"inner\"\n          title=\"最近回复的话题\"\n        >\n          <UserList data={this.props.userData.recent_replies}/>\n        </Card>\n      </div>\n     );\n  }\n  componentDidMount(){\n    let name = this.props.match.params.loginname\n    this.props.fetchUser(name)\n  }\n}\nconst mapStateToProps = (state) =>{\n  return{\n    userData:state.user.data\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ fetchUser},dispatch)\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User);"],"sourceRoot":""}